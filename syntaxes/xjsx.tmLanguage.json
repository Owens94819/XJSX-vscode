{
	"name": "xjsx",
	"scopeName": "source.xjsx",
	"fileTypes": [
		"xjsx"
	],
	"injections": {
		"L:(meta.script.xjsx) (meta.lang.json) - (meta source)": {
			"patterns": [
				{
					"begin": "(?<=>)(?!</)",
					"end": "(?=</)",
					"name": "meta.embedded.block.xjsx",
					"contentName": "source.json",
					"patterns": [
						{
							"include": "source.json"
						}
					]
				}
			]
		},
		"L:(meta.script.xjsx) (meta.lang.js | meta.lang.javascript) - (meta source)": {
			"patterns": [
				{
					"begin": "(?<=>)(?!</)",
					"end": "(?=</)",
					"name": "meta.embedded.block.xjsx",
					"contentName": "source.js",
					"patterns": [
						{
							"include": "source.js"
						}
					]
				}
			]
		},
		"L:meta.script.xjsx - meta.lang - (meta source)": {
			"patterns": [
				{
					"begin": "(?<=>)(?!</)",
					"end": "(?=</)",
					"name": "meta.embedded.block.xjsx",
					"contentName": "source.js",
					"patterns": [
						{
							"include": "source.js"
						}
					]
				}
			]
		},
		"L:meta.style.xjsx meta.lang.css - (meta source)": {
			"patterns": [
				{
					"begin": "(?<=>)(?!</)",
					"end": "(?=</)",
					"name": "meta.embedded.block.xjsx",
					"contentName": "source.css",
					"patterns": [
						{
							"include": "source.css"
						}
					]
				}
			]
		},
		"L:meta.style.xjsx - meta.lang - (meta source)": {
			"patterns": [
				{
					"begin": "(?<=>)(?!</)",
					"end": "(?=</)",
					"name": "meta.embedded.block.xjsx",
					"contentName": "source.css",
					"patterns": [
						{
							"include": "source.css"
						}
					]
				}
			]
		}
	},
	"patterns": [
		{
			"include": "#scope"
		}
	],
	"repository": {
		"scope": {
			"patterns": [
				{
					"include": "#processingInstructions(<?)"
				},
				{
					"include": "#processingInstructions(<!--?)"
				},
				{
					"include": "#comments(<!--)"
				},
				{
					"include": "#comments(<?)"
				},
				{
					"include": "#tags"
				},
				{
					"begin": "(?<=>)",
					"end": "(?=<)",
					"name": "text.xjsx"
				}
			]
		},
		"processingInstructions(<?)": {
			"patterns": [
				{
					"begin": "<\\?(?!.*[^\\?]>)([a-zA-Z0-9_\\$][^:]+:)",
					"end": "\\?>",
					"beginCaptures": {
						"0": {
							"name": "punctuation.section.embedded.begin.xjsx"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.section.embedded.end.xjsx"
						}
					},
					"name": "entity.other.attribute-name.xjsx",
					"patterns": [
						{
							"include": "source.js"
						}
					]
				},
				{
					"begin": "<\\?(?!.*[^\\?]>)",
					"end": "\\?>",
					"name": "punctuation.section.embedded.block.xjsx"
				}
			]
		},
		"processingInstructions(<!--?)": {
			"patterns": [
				{
					"begin": "<!--\\?(?!.*[^\\?]+--!?>)([a-zA-Z0-9_\\$][^:]+:)",
					"end": "\\?--!?>",
					"beginCaptures": {
						"0": {
							"name": "punctuation.section.embedded.begin.xjsx"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.section.embedded.end.xjsx"
						}
					},
					"name": "entity.other.attribute-name.xjsx",
					"patterns": [
						{
							"include": "source.js"
						}
					]
				},
				{
					"begin": "<!--\\?(?!.*[^\\?]+--!?>)",
					"end": "\\?--!?>",
					"name": "punctuation.section.embedded.block.xjsx"
				}
			]
		},
		"comments(<!--)": {
			"begin": "<!--",
			"end": "--!?>",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.xjsx"
				}
			},
			"name": "comment.block.xjsx",
			"patterns": [
				{
					"match": "\\G-?>|<!--(?!>)|<!-(?=-->)|--!?>",
					"name": "invalid.illegal.characters-not-allowed-here.xjsx"
				}
			]
		},
		"comments(<?)": {
			"begin": "<\\?",
			"end": ">",
			"captures": {
				"0": {
					"name": "punctuation.definition.comment.xjsx"
				}
			},
			"name": "comment.block.xjsx"
		},
		"attributes": {
			"patterns": [
				{
					"include": "#attributes-events"
				},
				{
					"include": "#attributes-keyvalue"
				}
			]
		},
		"attributes-events": {
			"begin": "(on(s(croll|t(orage|alled)|u(spend|bmit)|e(curitypolicyviolation|ek(ing|ed)|lect))|hashchange|c(hange|o(ntextmenu|py)|u(t|echange)|l(ick|ose)|an(cel|play(through)?))|t(imeupdate|oggle)|in(put|valid)|o(nline|ffline)|d(urationchange|r(op|ag(start|over|e(n(ter|d)|xit)|leave)?)|blclick)|un(handledrejection|load)|p(opstate|lay(ing)?|a(ste|use|ge(show|hide))|rogress)|e(nded|rror|mptied)|volumechange|key(down|up|press)|focus|w(heel|aiting)|l(oad(start|e(nd|d(data|metadata)))?|anguagechange)|a(uxclick|fterprint|bort)|r(e(s(ize|et)|jectionhandled)|atechange)|m(ouse(o(ut|ver)|down|up|enter|leave|move)|essage(error)?)|b(efore(unload|print)|lur)))(?![\\\\w:-])",
			"beginCaptures": {
				"0": {
					"patterns": [
						{
							"match": ".*",
							"name": "entity.other.attribute-name.xjsx"
						}
					]
				}
			},
			"end": "(?=\\s*+[^=\\s])",
			"name": "meta.attribute.$1.xjsx",
			"patterns": [
				{
					"begin": "=",
					"beginCaptures": {
						"0": {
							"name": "punctuation.separator.key-value.xjsx"
						}
					},
					"end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
					"patterns": [
						{
							"begin": "(?=[^\\s=<>`/]|/(?!>))",
							"end": "(?!\\G)",
							"name": "meta.embedded.line.js",
							"patterns": [
								{
									"match": "(([^\\s\\\"'=<>`/]|/(?!>))+)",
									"name": "string.unquoted.xjsx",
									"captures": {
										"0": {
											"name": "source.js"
										},
										"1": {
											"patterns": [
												{
													"include": "source.js"
												}
											]
										}
									}
								},
								{
									"begin": "([\"])",
									"end": "\\1",
									"beginCaptures": {
										"0": {
											"name": "punctuation.definition.string.begin.xjsx"
										}
									},
									"endCaptures": {
										"0": {
											"name": "punctuation.definition.string.end.xjsx"
										}
									},
									"name": "string.quoted.xjsx",
									"patterns": [
										{
											"match": "([^\\n\\\"/]|/(?![/*]))+",
											"captures": {
												"0": {
													"patterns": [
														{
															"include": "source.js"
														}
													]
												}
											}
										},
										{
											"begin": "//",
											"beginCaptures": {
												"0": {
													"name": "punctuation.definition.comment.js"
												}
											},
											"end": "(?=\\\")|\\n",
											"name": "comment.line.double-slash.js"
										},
										{
											"begin": "/\\*",
											"beginCaptures": {
												"0": {
													"name": "punctuation.definition.comment.begin.js"
												}
											},
											"end": "(?=\\\")|\\*/",
											"endCaptures": {
												"0": {
													"name": "punctuation.definition.comment.end.js"
												}
											},
											"name": "comment.block.js"
										}
									]
								},
								{
									"begin": "(['])",
									"end": "\\1",
									"beginCaptures": {
										"0": {
											"name": "punctuation.definition.string.begin.xjsx"
										}
									},
									"endCaptures": {
										"0": {
											"name": "punctuation.definition.string.end.xjsx"
										}
									},
									"name": "string.quoted.xjsx",
									"patterns": [
										{
											"match": "([^\\n\\'/]|/(?![/*]))+",
											"captures": {
												"0": {
													"patterns": [
														{
															"include": "source.js"
														}
													]
												}
											}
										},
										{
											"begin": "//",
											"beginCaptures": {
												"0": {
													"name": "punctuation.definition.comment.js"
												}
											},
											"end": "(?=\\')|\\n",
											"name": "comment.line.double-slash.js"
										},
										{
											"begin": "/\\*",
											"beginCaptures": {
												"0": {
													"name": "punctuation.definition.comment.begin.js"
												}
											},
											"end": "(?=\\')|\\*/",
											"endCaptures": {
												"0": {
													"name": "punctuation.definition.comment.end.js"
												}
											},
											"name": "comment.block.js"
										}
									]
								}
							]
						}
					]
				}
			]
		},
		"attributes-keyvalue": {
			"begin": "([_@$[:alpha:]][:._\\-$[:alnum:]]*)",
			"beginCaptures": {
				"0": {
					"patterns": [
						{
							"match": ".*",
							"name": "entity.other.attribute-name.xjsx"
						}
					]
				}
			},
			"end": "(?=\\s*+[^=\\s])",
			"name": "meta.attribute.$1.xjsx",
			"patterns": [
				{
					"begin": "=",
					"beginCaptures": {
						"0": {
							"name": "punctuation.separator.key-value.xjsx"
						}
					},
					"end": "(?<=[^\\s=])(?!\\s*=)|(?=/?>)",
					"patterns": [
						{
							"include": "#attributes-value"
						}
					]
				}
			]
		},
		"attributes-value": {
			"patterns": [
				{
					"match": "([^\\s\"'=<>`/]|/(?!>))+",
					"name": "string.unquoted.xjsx"
				},
				{
					"begin": "(['\"])",
					"end": "\\1",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.xjsx"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.xjsx"
						}
					},
					"name": "string.quoted.xjsx"
				}
			]
		},
		"tags": {
			"patterns": [
				{
					"include": "#tags-raw"
				},
				{
					"include": "#tags-lang"
				},
				{
					"include": "#tags-void"
				},
				{
					"include": "#tags-general-end"
				},
				{
					"include": "#tags-general-start"
				}
			]
		},
		"tags-name": {
			"patterns": [
				{
					"match": "[a-zA-Z][\\w0-9:]*-[\\w0-9:-]*",
					"name": "meta.tag.custom.xjsx entity.name.tag.xjsx"
				},
				{
					"match": "[a-zA-Z][\\w0-9:-]*",
					"name": "entity.name.tag.xjsx"
				}
			]
		},
		"tags-start-attributes": {
			"begin": "\\G",
			"end": "(?=/?>)",
			"name": "meta.tag.start.xjsx",
			"patterns": [
				{
					"include": "#attributes"
				}
			]
		},
		"tags-lang-start-attributes": {
			"begin": "\\G",
			"end": "(?=/>)|>",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.tag.end.xjsx"
				}
			},
			"name": "meta.tag.start.xjsx",
			"patterns": [
				{
					"include": "#attributes"
				}
			]
		},
		"tags-start-node": {
			"match": "(<)([^/\\s>/]*)",
			"captures": {
				"1": {
					"name": "punctuation.definition.tag.begin.xjsx"
				},
				"2": {
					"patterns": [
						{
							"include": "#tags-name"
						}
					]
				}
			},
			"name": "meta.tag.start.xjsx"
		},
		"tags-end-node": {
			"match": "(</)(.*?)\\s*(>)|(/>)",
			"captures": {
				"1": {
					"name": "meta.tag.end.xjsx punctuation.definition.tag.begin.xjsx"
				},
				"2": {
					"name": "meta.tag.end.xjsx",
					"patterns": [
						{
							"include": "#tags-name"
						}
					]
				},
				"3": {
					"name": "meta.tag.end.xjsx punctuation.definition.tag.end.xjsx"
				},
				"4": {
					"name": "meta.tag.start.xjsx punctuation.definition.tag.end.xjsx"
				}
			}
		},
		"tags-raw": {
			"begin": "<([^/?!\\s<>]+)(?=[^>]+is:raw).*?",
			"beginCaptures": {
				"0": {
					"patterns": [
						{
							"include": "#tags-start-node"
						}
					]
				}
			},
			"end": "</\\1\\s*>|/>",
			"endCaptures": {
				"0": {
					"patterns": [
						{
							"include": "#tags-end-node"
						}
					]
				}
			},
			"name": "meta.scope.tag.$1.xjsx meta.raw.xjsx",
			"contentName": "source.unknown",
			"patterns": [
				{
					"include": "#tags-lang-start-attributes"
				}
			]
		},
		"tags-lang": {
			"begin": "<(script|style)",
			"end": "</\\1\\s*>|/>",
			"beginCaptures": {
				"0": {
					"patterns": [
						{
							"include": "#tags-start-node"
						}
					]
				}
			},
			"endCaptures": {
				"0": {
					"patterns": [
						{
							"include": "#tags-end-node"
						}
					]
				}
			},
			"name": "meta.scope.tag.$1.xjsx meta.$1.xjsx",
			"patterns": [
				{
					"begin": "\\G(?=\\s*[^>]*?(type|lang)\\s*=\\s*(['\"]|)(?:text\\/)?(application\\/ld\\+json)\\2)",
					"end": "(?=</|/>)",
					"name": "meta.lang.json.xjsx",
					"patterns": [
						{
							"include": "#tags-lang-start-attributes"
						}
					]
				},
				{
					"begin": "\\G(?=\\s*[^>]*?(type|lang)\\s*=\\s*(['\"]|)(module)\\2)",
					"end": "(?=</|/>)",
					"name": "meta.lang.javascript.xjsx",
					"patterns": [
						{
							"include": "#tags-lang-start-attributes"
						}
					]
				},
				{
					"begin": "\\G(?=\\s*[^>]*?(type|lang)\\s*=\\s*(['\"]|)(?:text/|application/)?([\\w\\/+]+)\\2)",
					"end": "(?=</|/>)",
					"name": "meta.lang.$3.xjsx",
					"patterns": [
						{
							"include": "#tags-lang-start-attributes"
						}
					]
				},
				{
					"include": "#tags-lang-start-attributes"
				}
			]
		},
		"tags-void": {
			"begin": "(<)(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)(?=\\s|/?>)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.tag.begin.xjsx"
				},
				"2": {
					"name": "entity.name.tag.xjsx"
				}
			},
			"end": "/?>",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.tag.begin.xjsx"
				}
			},
			"name": "meta.tag.void.xjsx",
			"patterns": [
				{
					"include": "#attributes"
				}
			]
		},
		"tags-general-start": {
			"begin": "(<)([^/\\s>/]*)",
			"end": "(/?>)",
			"beginCaptures": {
				"0": {
					"patterns": [
						{
							"include": "#tags-start-node"
						}
					]
				}
			},
			"endCaptures": {
				"1": {
					"name": "meta.tag.start.xjsx punctuation.definition.tag.end.xjsx"
				}
			},
			"name": "meta.scope.tag.$2.xjsx",
			"patterns": [
				{
					"include": "#tags-start-attributes"
				}
			]
		},
		"tags-general-end": {
			"begin": "(</)([^/\\s>]*)",
			"end": "(>)",
			"beginCaptures": {
				"1": {
					"name": "meta.tag.end.xjsx punctuation.definition.tag.begin.xjsx"
				},
				"2": {
					"name": "meta.tag.end.xjsx",
					"patterns": [
						{
							"include": "#tags-name"
						}
					]
				}
			},
			"endCaptures": {
				"1": {
					"name": "meta.tag.end.xjsx punctuation.definition.tag.end.xjsx"
				}
			},
			"name": "meta.scope.tag.$2.xjsx"
		}
	}
}